AWSTemplateFormatVersion: '2010-09-09'

Resources:
  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: osama-clf-bucket

  MyIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3FullAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: 
                  - "arn:aws:s3:::osama-clf-bucket/*"

  MyLambdaRead:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: lambdaR-clf
      Runtime: python3.8
      Handler: index.lambda_handler
      Role: !GetAtt MyIAMRole.Arn
      Timeout: 60
      Code:
        ZipFile: |
          import os
          import boto3
          def lambda_handler(event, context):
            bucket_name = 'osama-clf-bucket'
            s3 = boto3.client('s3')
            object_key = 'people.csv'
            try:
              response = s3.get_object(Bucket=bucket_name, Key=object_key)
              data = response['Body'].read()
              print(data)
              return {
              'statusCode': 200,
              'body': 'Hello from Lambda Read.'
              }
            except Exception as e:
              print(f"Error: {e}")
              return {
              'statusCode': 500,
              'body': 'Error.'
              }
    
  MyLambdaWrite:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: lambdaW-clf
      Runtime: python3.8
      Handler: index.lambda_handler
      Role: !GetAtt MyIAMRole.Arn
      Timeout: 60
      Code:
        ZipFile: |
          import os
          import csv
          import boto3

          def lambda_handler(event, context):
            bucket_name = 'osama-clf-bucket'
            header = ['Name', 'Age', 'Profession']
            data = [('John', '25', 'Engineer'),
                    ('Anna', '28', 'Doctor'),
                    ('Peter', '30', 'Artist')]
            filename = 'people.csv'
            with open('/tmp/' + filename, 'w', newline='') as f:
                writer = csv.writer(f)
                writer.writerow(header)
                writer.writerows(data)
            s3 = boto3.client('s3')
            s3.upload_file('/tmp/' + filename, bucket_name, filename)
